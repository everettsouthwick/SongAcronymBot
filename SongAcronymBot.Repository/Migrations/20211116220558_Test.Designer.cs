// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SongAcronymBot.Repository.Data;

#nullable disable

namespace SongAcronymBot.Repository.Migrations
{
    [DbContext(typeof(SongAcronymBotContext))]
    [Migration("20211116220558_Test")]
    partial class Test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SongAcronymBot.Repository.Models.Acronym", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AcronymName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AcronymType")
                        .HasColumnType("int");

                    b.Property<string>("AlbumName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArtistName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("TrackName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearReleased")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Acronyms");
                });

            modelBuilder.Entity("SongAcronymBot.Repository.Models.Redditor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Redditors");
                });

            modelBuilder.Entity("SongAcronymBot.Repository.Models.Subreddit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("AcronymId")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AcronymId");

                    b.ToTable("Subreddits");
                });

            modelBuilder.Entity("SongAcronymBot.Repository.Models.Subreddit", b =>
                {
                    b.HasOne("SongAcronymBot.Repository.Models.Acronym", null)
                        .WithMany("Subreddits")
                        .HasForeignKey("AcronymId");
                });

            modelBuilder.Entity("SongAcronymBot.Repository.Models.Acronym", b =>
                {
                    b.Navigation("Subreddits");
                });
#pragma warning restore 612, 618
        }
    }
}
